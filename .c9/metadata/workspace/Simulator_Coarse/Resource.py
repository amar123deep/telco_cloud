{"filter":false,"title":"Resource.py","tooltip":"/Simulator_Coarse/Resource.py","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":140,"column":0},"end":{"row":140,"column":1},"action":"remove","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":139,"column":22},"end":{"row":140,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":141,"column":10},"end":{"row":141,"column":36},"action":"remove","lines":["abs(thldRes-normAvailRes)*"]}]}],[{"group":"doc","deltas":[{"start":{"row":78,"column":29},"end":{"row":79,"column":0},"action":"insert","lines":["",""]},{"start":{"row":79,"column":0},"end":{"row":79,"column":2},"action":"insert","lines":["\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":79,"column":2},"end":{"row":80,"column":0},"action":"insert","lines":["",""]},{"start":{"row":80,"column":0},"end":{"row":80,"column":2},"action":"insert","lines":["\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":2},"end":{"row":80,"column":22},"action":"insert","lines":["computeTotalOverload"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":22},"end":{"row":80,"column":23},"action":"insert","lines":["("]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":23},"end":{"row":80,"column":24},"action":"insert","lines":[")"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":2},"end":{"row":80,"column":3},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":3},"end":{"row":80,"column":4},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":4},"end":{"row":80,"column":5},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":5},"end":{"row":80,"column":6},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":80,"column":6},"end":{"row":80,"column":7},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":32},"end":{"row":129,"column":33},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":31},"end":{"row":129,"column":32},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":30},"end":{"row":129,"column":31},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":29},"end":{"row":129,"column":30},"action":"remove","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":28},"end":{"row":129,"column":29},"action":"remove","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":27},"end":{"row":129,"column":28},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":26},"end":{"row":129,"column":27},"action":"remove","lines":["B"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":26},"end":{"row":129,"column":27},"action":"insert","lines":["O"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":27},"end":{"row":129,"column":28},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":28},"end":{"row":129,"column":29},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":29},"end":{"row":129,"column":30},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":30},"end":{"row":129,"column":31},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":31},"end":{"row":129,"column":32},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":32},"end":{"row":129,"column":33},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":33},"end":{"row":129,"column":34},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":139,"column":5},"end":{"row":139,"column":19},"action":"remove","lines":["computeBadness"]},{"start":{"row":139,"column":5},"end":{"row":139,"column":20},"action":"insert","lines":["computeOverload"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":15},"end":{"row":306,"column":75},"action":"remove","lines":["1/(1+resourceUsage/self.resources[resourceName]['CAPACITY'])"]},{"start":{"row":306,"column":15},"end":{"row":306,"column":16},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":16},"end":{"row":306,"column":17},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":17},"end":{"row":306,"column":18},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":18},"end":{"row":306,"column":19},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":19},"end":{"row":306,"column":20},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":20},"end":{"row":306,"column":21},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":21},"end":{"row":306,"column":22},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":22},"end":{"row":306,"column":23},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":20},"end":{"row":306,"column":23},"action":"remove","lines":["com"]},{"start":{"row":306,"column":20},"end":{"row":306,"column":37},"action":"insert","lines":["computeOverload()"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":36},"end":{"row":306,"column":49},"action":"insert","lines":["resourceUsage"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":57},"end":{"row":305,"column":62},"action":"remove","lines":["items"]},{"start":{"row":305,"column":57},"end":{"row":305,"column":58},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":58},"end":{"row":305,"column":59},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":59},"end":{"row":305,"column":60},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":60},"end":{"row":305,"column":61},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":61},"end":{"row":305,"column":62},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":62},"end":{"row":305,"column":63},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":6},"end":{"row":305,"column":20},"action":"remove","lines":["resourceName, "]}]}],[{"group":"doc","deltas":[{"start":{"row":148,"column":1},"end":{"row":202,"column":0},"action":"remove","lines":["# [Deprecated] Find paths to from this resource to application","\tdef findPaths(self, appName): # Caution! Only for trees","\t\t# [Preliminary] Recursive search function","\t\tdef traverse(node, path, appName, paths):","\t\t\tif node.hosts(appName): # If node hosts application","\t\t\t\t#print \"%s found in %s along path %s\" % (appName, node.getName(), str(path))","\t\t\t\tpaths.append(path)","\t\t\telse: # Keep looking ...","\t\t\t\tpeers = node.getPeers()","\t\t\t\tfor peerName in peers:","\t\t\t\t\tif peers[peerName] not in path: ","\t\t\t\t\t\ttraverse(peers[peerName], path + [peers[peerName]], appName, paths)","","\t\tpaths = [] # All the resulting paths","\t\tpath = [] # Iteratively constructed path","","\t\ttraverse(self, path+[self], appName, paths)","\t\t","\t\treturn paths","\t\t","\t# [Deprecated] Find paths to from this resource to application","\tdef findMinPath(self, appName): # Caution! Only for trees","\t\tpaths = self.findPaths(appName)","\t\t","\t\tassert len(paths)>0, 'App %s not found from %s' % (appName, leafName)","","\t\tminLen = sys.maxint","\t\tminPath = None","","\t\tfor path in paths:","\t\t\tif len(path)<=minLen:","\t\t\t\tminLen = len(path)","\t\t\t\tminPath = path","\t\t","\t\treturn minPath","","\t# [Deprecated] Find paths to from this resource to application","\tdef findPathsDC(self, fromNode, toNode): # Caution! Only for trees","","\t\tdef traverse(node, path, toNodeName, paths):","\t\t\tif node.getName is toNodeName:","\t\t\t\tpaths.append(path)","\t\t\telse: # Keep looking ...","\t\t\t\tpeers = node.getPeers()","\t\t\t\tfor peerName in peers:","\t\t\t\t\tif peers[peerName] not in path: ","\t\t\t\t\t\ttraverse(peers[peerName], path + [peers[peerName]], dcName, paths)","","\t\tpaths = [] # All the resulting paths","\t\tpath = [] # Iteratively constructed path","","\t\ttraverse(self, path+[self], toNode.getName(), paths)","\t\t","\t\treturn paths",""]}]}],[{"group":"doc","deltas":[{"start":{"row":144,"column":0},"end":{"row":148,"column":1},"action":"remove","lines":["","\t'''","\tFinding paths for workload propagation and scheduling","\t'''","\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":143,"column":28},"end":{"row":144,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":143,"column":28},"end":{"row":144,"column":0},"action":"insert","lines":["",""]},{"start":{"row":144,"column":0},"end":{"row":144,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":190,"column":0},"end":{"row":207,"column":0},"action":"remove","lines":["","\t# Evalutae hypothecital badness this consistillation","\tdef evaluateBadness(self, targetApps):","\t\t# Input:    apps is a dictionary with application name and population","\t\t# Output:   The badness for each resource, when taking into accound the ","\t\t#           additional workload incurred by app and nbrUsers.","\t\tbadness = {}","","\t\ttotalUsage = self.evaluateResourcesUsage(targetApps)","","\t\texclude = targetApps.keys()","\t\t","\t\t# For all other apps","\t\tfor resourceName, resource in self.resources.iteritems():","\t\t\tbadness[resourceName] = self.computeBadness(totalUsage[resourceName]/resource['CAPACITY'], resource['THRESHOLD'])","","\t\treturn badness",""]}]}],[{"group":"doc","deltas":[{"start":{"row":190,"column":0},"end":{"row":226,"column":0},"action":"remove","lines":["","\t# Evalutae hypothecital badness usage given the addition of targetApps","\tdef evaluateBadnessAdditive(self, targetApps):","\t\t# Input:    apps is a dictionary with application name and population","\t\t# Output:   The badness for each resource, when taking into accound the ","\t\t#           additional workload incurred by app and nbrUsers.","\t\tbadness = {}","","\t\ttotalUsage = self.evaluateResourcesUsage(targetApps)","","\t\texclude = targetApps.keys()","\t\t","\t\t# For all other apps","\t\tfor resourceName, resource in self.resources.iteritems():","\t\t\tbadness[resourceName] = self.computeBadness(totalUsage[resourceName]/resource['CAPACITY'], resource['THRESHOLD'])","","\t\treturn badness","\t\t","\t# Evalutae hypothecital badness usage given the addition of targetApps","\tdef evaluateResourceBadness(self, targetResources):","\t\tbadness = {}","","\t\tfor resourceName, resourceUsage in targetResources.iteritems():","\t\t\tbadness[resourceName] = self.computeBadness(resourceUsage/self.resources[resourceName]['CAPACITY'], self.resources[resourceName]['THRESHOLD'])","","\t\treturn badness","\t\t","\t# [DEPRECATED] Evalutae hypothecital badness usage given the addition of targetApps","\tdef evaluateAggregateBadness(self, targetResources):","\t\tbadness = 0.0","","\t\tfor resourceName, resourceUsage in targetResources.iteritems():","\t\t\tbadness += self.computeBadness(resourceUsage/self.resources[resourceName]['CAPACITY'], self.resources[resourceName]['THRESHOLD'])","","\t\treturn badness","\t\t",""]}]}],[{"group":"doc","deltas":[{"start":{"row":190,"column":0},"end":{"row":191,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":0},"end":{"row":51,"column":21},"action":"remove","lines":["\t\t","\t# Get badness","\tdef getBadness(self):","\t\treturn self.badness"]}]}],[{"group":"doc","deltas":[{"start":{"row":47,"column":18},"end":{"row":48,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":40,"column":15},"end":{"row":41,"column":0},"action":"insert","lines":["",""]},{"start":{"row":41,"column":0},"end":{"row":41,"column":2},"action":"insert","lines":["\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":28,"column":45},"action":"remove","lines":["\t# Get peers as toubles, returns a dictionary"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":1},"end":{"row":32,"column":0},"action":"insert","lines":["",""]},{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"insert","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":1},"end":{"row":32,"column":46},"action":"insert","lines":["\t# Get peers as toubles, returns a dictionary"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":0},"end":{"row":32,"column":1},"action":"remove","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":0},"end":{"row":28,"column":1},"action":"insert","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":1},"end":{"row":28,"column":2},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":2},"end":{"row":28,"column":3},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":3},"end":{"row":28,"column":4},"action":"insert","lines":["G"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":5},"end":{"row":28,"column":6},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":6},"end":{"row":28,"column":7},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":7},"end":{"row":28,"column":8},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":8},"end":{"row":28,"column":9},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":9},"end":{"row":28,"column":10},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":10},"end":{"row":28,"column":11},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":11},"end":{"row":28,"column":12},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":18},"end":{"row":28,"column":19},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":18},"end":{"row":28,"column":19},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"remove","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"remove","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"remove","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":11},"end":{"row":28,"column":12},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":11},"end":{"row":28,"column":12},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":12},"end":{"row":28,"column":13},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":13},"end":{"row":28,"column":14},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":14},"end":{"row":28,"column":15},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":15},"end":{"row":28,"column":16},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":16},"end":{"row":28,"column":17},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":17},"end":{"row":28,"column":18},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":18},"end":{"row":28,"column":19},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":19},"end":{"row":28,"column":20},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":20},"end":{"row":28,"column":21},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":21},"end":{"row":28,"column":22},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":22},"end":{"row":28,"column":23},"action":"insert","lines":[" "]}]}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":27,"column":1},"end":{"row":27,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":10,"state":"start","mode":"ace/mode/python"}},"timestamp":1428070291000,"hash":"1a108ea0ff66090d93778f70c9e37ee54c8ed312"}